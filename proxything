import socket
import threading

def handle_client(client_socket, remote_host, remote_port):
    remote_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    remote_socket.connect((remote_host, remote_port))

    while True:
        # Receive data from the client
        client_data = client_socket.recv(4096)
        if not client_data:
            break

        # Forward data to the remote server
        remote_socket.sendall(client_data)

        # Receive response from the remote server
        remote_response = remote_socket.recv(4096)

        # Forward response back to the client
        client_socket.sendall(remote_response)

    client_socket.close()
    remote_socket.close()

def start_proxy(proxy_host, proxy_port, remote_host, remote_port):
    proxy_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    proxy_socket.bind((proxy_host, proxy_port))
    proxy_socket.listen(5)
    print(f"[*] Proxy listening on {proxy_host}:{proxy_port}")

    while True:
        client_socket, addr = proxy_socket.accept()
        print(f"[*] Accepted connection from {addr[0]}:{addr[1]}")
        proxy_thread = threading.Thread(target=handle_client, args=(client_socket, remote_host, remote_port))
        proxy_thread.start()

if __name__ == "__main__":
    PROXY_HOST = '127.0.0.1'  # Proxy listens on localhost
    PROXY_PORT = 8888          # Proxy port
    REMOTE_HOST = 'ultigame2890.github.io

'  # Destination server hostname
    REMOTE_PORT = 80           # Destination server port

    start_proxy(PROXY_HOST, PROXY_PORT, REMOTE_HOST, REMOTE_PORT)
